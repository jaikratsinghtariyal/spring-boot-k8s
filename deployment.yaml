apiVersion: v1
kind: Namespace
metadata:
  name: kuma-demo
  namespace: kuma-demo
  annotations:
    kuma.io/sidecar-injection: enabled
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: spring-deployment-new
  name: spring-deployment-new-service
  namespace: kuma-demo
  annotations:
    80.service.kuma.io/protocol: "http"
    ingress.kubernetes.io/service-upstream: "true"
spec:
  ports:
    - port: 8085
      protocol: TCP
      targetPort: 8085
  selector:
    app: spring-deployment-new
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: spring-deployment-new
  name: spring-deployment-new-deployment
  namespace: kuma-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-deployment-new
  strategy: {}
  template:
    metadata:
      labels:
        app: spring-deployment-new
    spec:
      containers:
      - image: jaikratsingh/spring-boot-k8s:v5
        name: spring-boot-k8s
        #ports: #for AWS
        # - containerPort: 8080 #for aws
        resources: {}
#status: {}

  #type: ClusterIP
  #type: NodePort
#status:
#  loadBalancer: {}
#---
## Annotations Reference:  https://kubernetes-sigs.github.io/aws-alb-ingress-controller/guide/ingress/annotation/
##apiVersion: networking.k8s.io/v1
#apiVersion: extensions/v1beta1
#kind: Ingress
#metadata:
#  name: spring-deployment-new-ingress
#  namespace: kuma-demo
#  labels:
#    app: spring-deployment-new
#  annotations:
##    # Ingress Core Settings
##    kubernetes.io/ingress.class: "alb"
##    alb.ingress.kubernetes.io/scheme: internet-facing
#    nginx.ingress.kubernetes.io/rewrite-target: /
#spec:
#  rules:
#     - http:
#        paths:
#          - path: "/*"
#            pathType: Prefix
#            backend:
#              serviceName: "spring-deployment-new-service"
#              servicePort: 8080
